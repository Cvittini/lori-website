import { factories } from '@strapi/strapi';

export default factories.createCoreController('api::registration.registration', ({ strapi }) => ({
  async create(ctx) {
    const raw = (ctx.request.body as any) ?? {};
    const body = raw.data ?? raw;

    if (!body?.fullName || !body?.email || !body?.selectedEvent) {
      return ctx.badRequest('Missing required fields');
    }
    if (body.honeypot) {
      return ctx.badRequest('Bot detected');
    }

    // Save registration
    const entry = await strapi.entityService.create('api::registration.registration', {
      data: {
        fullName: body.fullName,
        email: body.email,
        phone: body.phone ?? '',
        selectedEvent: body.selectedEvent,
        honeypot: '',
      },
    });

    // Get event info for emails
    const event = await strapi.entityService.findOne('api::event.event', body.selectedEvent, {
      fields: ['title', 'date', 'time', 'location', 'price'],
    });

    // Admin notification
    const adminText = `
New Registration:
- Name: ${body.fullName}
- Email: ${body.email}
- Phone: ${body.phone ?? 'N/A'}

Event:
- ${event?.title ?? 'Event'}
- ${event?.date ?? ''} ${event?.time ?? ''}
- ${event?.location ?? ''}
- Price: ${event?.price != null ? `$${event.price}` : 'N/A'}
`.trim();

    await strapi.plugin('email').service('email').send({
      to: 'lorimarfitness@gmail.com',
      subject: `New Registration – ${event?.title ?? 'Event'}`,
      text: adminText,
    });

    // User confirmation (optional)
    await strapi.plugin('email').service('email').send({
      to: body.email,
      subject: `You're registered: ${event?.title ?? 'Event'}`,
      text: `Hi ${body.fullName},

You're registered for ${event?.title}.
Date: ${event?.date ?? ''} ${event?.time ?? ''}
Location: ${event?.location ?? ''}

See you there!
— Lorimar Fitness`,
    });

    ctx.body = { data: { id: (entry as any).id } };
  },
}));
